{"name": "test_mbank_transfer", "status": "broken", "statusDetails": {"message": "Exceptions.payment_errors.ButtonNotFoundError: Кнопка подтверждения не найдена для банка mbank", "trace": "self = <tests.test_banks_transfers.TestBankTransfers object at 0x00000159E324A000>\nbrowser = <Page url='https://ibank.kicb.net/'>\n\n    @allure.feature(\"Банковские переводы\")\n    @allure.story(\"Переводы в MBank\")\n    def test_mbank_transfer(self, browser):\n        \"\"\"Тест перевода в MBank\"\"\"\n        with allure.step(\"Выполняем перевод в MBank\"):\n            page = browser\n            banks_page = BanksTransfersPage(page)\n            banks_page.open_banks_transfers()\n>           banks_page.transfer_to_bank(\"mbank\", \"996555515516\")\n\nProdWeb\\tests\\test_banks_transfers.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nProdWeb\\pages\\banks_transfers_page.py:77: in transfer_to_bank\n    has_error = self.handle_payment_buttons(bank_key, amount)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.banks_transfers_page.BanksTransfersPage object at 0x00000159E39075F0>\nbank_key = 'mbank', amount = 20\n\n    def handle_payment_buttons(self, bank_key: str, amount: int):\n        \"\"\"Обрабатывает нажатие кнопок оплаты и подтверждения\"\"\"\n        try:\n            # Проверка кнопки оплаты\n            if not self.page.locator(\"//button [contains(text(), 'Оплатить')]\").is_visible(timeout=5000):\n                raise ButtonNotFoundError(f\"Кнопка Оплатить не найдена для банка {bank_key}\", bank=bank_key)\n            self.page.locator(\"//button [contains(text(), 'Оплатить')]\").click()\n            print(f\"Нажата кнопка Оплатить для банка {bank_key}\")\n    \n            # Даем время для появления ошибки или кнопки подтверждения\n            sleep(2)\n    \n            # Проверяем ошибку минимального лимита\n            error_message = \"//span [contains(text(), 'Сумма меньше минимального лимита.')]\"\n            if self.page.locator(error_message).is_visible(timeout=2000):\n                print(f\"Обнаружена ошибка минимального лимита для банка {bank_key}\")\n                return True\n    \n            # Проверяем разные варианты кнопок подтверждения\n            confirm_buttons = [\n                \"//button [contains(text(), 'Отправить на подтверждение')]\",\n                \"//button [contains(text(), 'Подтвердить')]\"\n            ]\n    \n            button_found = False\n            for button in confirm_buttons:\n                if self.page.locator(button).is_visible(timeout=2000):\n                    self.page.locator(button).click()\n                    print(f\"Нажата кнопка подтверждения '{button}' для банка {bank_key}\")\n                    button_found = True\n                    break\n    \n            if not button_found:\n>               raise ButtonNotFoundError(f\"Кнопка подтверждения не найдена для банка {bank_key}\", bank=bank_key)\nE               Exceptions.payment_errors.ButtonNotFoundError: Кнопка подтверждения не найдена для банка mbank\n\nProdWeb\\pages\\Base_page.py:97: ButtonNotFoundError"}, "description": "Тест перевода в MBank", "steps": [{"name": "Выполняем перевод в MBank", "status": "broken", "statusDetails": {"message": "Exceptions.payment_errors.ButtonNotFoundError: Кнопка подтверждения не найдена для банка mbank\n", "trace": "  File \"C:\\project_kicb\\ProdWeb\\tests\\test_banks_transfers.py\", line 25, in test_mbank_transfer\n    banks_page.transfer_to_bank(\"mbank\", \"996555515516\")\n  File \"C:\\project_kicb\\ProdWeb\\pages\\banks_transfers_page.py\", line 77, in transfer_to_bank\n    has_error = self.handle_payment_buttons(bank_key, amount)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\project_kicb\\ProdWeb\\pages\\Base_page.py\", line 97, in handle_payment_buttons\n    raise ButtonNotFoundError(f\"Кнопка подтверждения не найдена для банка {bank_key}\", bank=bank_key)\n"}, "start": 1737373503923, "stop": 1737373508157}], "attachments": [{"name": "stdout", "source": "3f2a217c-43a5-48f2-a2d4-c8ff24384507-attachment.txt", "type": "text/plain"}], "start": 1737373503923, "stop": 1737373508158, "uuid": "ef83848a-f168-4ddf-acbf-dd55d23ef392", "historyId": "74d11917e6ecdaca3217af18e572bb2f", "testCaseId": "74d11917e6ecdaca3217af18e572bb2f", "fullName": "tests.test_banks_transfers.TestBankTransfers#test_mbank_transfer", "labels": [{"name": "feature", "value": "Банковские переводы"}, {"name": "story", "value": "Переводы в MBank"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_banks_transfers"}, {"name": "subSuite", "value": "TestBankTransfers"}, {"name": "host", "value": "DESKTOP-U8CRCDT"}, {"name": "thread", "value": "15128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_banks_transfers"}]}