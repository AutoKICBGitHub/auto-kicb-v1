{"name": "Тест переводов на банки КР", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.wait_for: Timeout 5000ms exceeded.\nCall log:\nwaiting for locator(\"//button [contains(text(), 'Подтвердить')]\") to be visible", "trace": "browser = <Page url='https://ibank.kicb.net/payment/provider?id=834'>\n\n    @allure.title(\"Тест переводов на банки КР\")\n    @allure.description(\"Проверка переводов на различные банки КР по номеру телефона\")\n    def test_banks_transfers(browser):\n        try:\n            page = browser\n            banks_page = BanksTransfersPage(page)\n    \n            # Открываем раздел переводов\n            banks_page.open_banks_transfers()\n    \n            # Список тестовых номеров для каждого банка\n            test_numbers = {\n                \"optima\": \"996555515516\",\n                \"mbank\": \"996555515516\",\n                \"bakai\": \"996555515516\",\n                \"simbank\": \"996502323335\",\n                \"demir\": \"996502323335\",\n                \"kompanion\": \"996502323335\",\n                \"ayil\": \"996504444342\",\n                \"obank\": \"996502323335\",\n            }\n    \n            # Выполняем переводы для каждого банка\n            for bank, phone in test_numbers.items():\n                with allure.step(f\"Перевод в {bank}\"):\n>                   banks_page.transfer_to_bank(bank, phone)\n\nProdWeb\\tests\\test_banks_transfers.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nProdWeb\\pages\\banks_transfers_page.py:69: in transfer_to_bank\n    self.page.locator(self.confirm_button).wait_for(timeout=5000)\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:17432: in wait_for\n    self._sync(self._impl_obj.wait_for(timeout=timeout, state=state))\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_locator.py:670: in wait_for\n    await self._frame.wait_for_selector(\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x0000022AC3CA5940>\ncb = <function Channel.send.<locals>.<lambda> at 0x0000022AC3CB1120>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.wait_for: Timeout 5000ms exceeded.\nE           Call log:\nE           waiting for locator(\"//button [contains(text(), 'Подтвердить')]\") to be visible\n\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:514: TimeoutError"}, "description": "Проверка переводов на различные банки КР по номеру телефона", "steps": [{"name": "Перевод в optima", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.wait_for: Timeout 5000ms exceeded.\nCall log:\nwaiting for locator(\"//button [contains(text(), 'Подтвердить')]\") to be visible\n\n", "trace": "  File \"C:\\project_kicb\\ProdWeb\\tests\\test_banks_transfers.py\", line 29, in test_banks_transfers\n    banks_page.transfer_to_bank(bank, phone)\n  File \"C:\\project_kicb\\ProdWeb\\pages\\banks_transfers_page.py\", line 69, in transfer_to_bank\n    self.page.locator(self.confirm_button).wait_for(timeout=5000)\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 17432, in wait_for\n    self._sync(self._impl_obj.wait_for(timeout=timeout, state=state))\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 670, in wait_for\n    await self._frame.wait_for_selector(\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 323, in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 59, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 514, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "start": 1737371006153, "stop": 1737371011410}], "attachments": [{"name": "Ошибка", "source": "af288d3c-7d00-414e-ad6e-6da073a7bfbd-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "2d9e40b8-8526-4762-a7fc-cae48f9ded41-attachment.txt", "type": "text/plain"}], "start": 1737371004350, "stop": 1737371011415, "uuid": "bbeab561-1e5e-4940-8a53-8962bf5f685c", "historyId": "b32e6a2ffa6d6f27d304c2fe8d236c19", "testCaseId": "b32e6a2ffa6d6f27d304c2fe8d236c19", "fullName": "tests.test_banks_transfers#test_banks_transfers", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_banks_transfers"}, {"name": "host", "value": "DESKTOP-U8CRCDT"}, {"name": "thread", "value": "15496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_banks_transfers"}]}