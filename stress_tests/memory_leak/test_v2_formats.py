import grpc, json, uuid, sys, os
sys.path.append('C:\\project_kicb\\stress_tests\\memory_leak')
from protofile_pb2_grpc import WebAccountV2ApiStub
from protofile_pb2 import WebAccountsRequest

channel = grpc.secure_channel('newibanktest.kicb.net:443', grpc.ssl_channel_credentials())
v2_stub = WebAccountV2ApiStub(channel)

# –ü–æ–ª–Ω–∞—è –º–µ—Ç–∞–¥–∞—Ç–∞ (–∫–∞–∫ —É V1)
full_metadata = [
    ('sessionkey', '5MtEKcQbp3LZZXK5s3lNIH'), 
    ('sessionid', '5P2qfQVZcRGMldmHzyfAaI'), 
    ('device-type', 'ios'), 
    ('refid', str(uuid.uuid4())), 
    ('x-real-ip', '138.199.55.230'), 
    ('user-agent', '{"ua": {"device": "iPhone 15 Pro", "osVersion": "18.0.1"}}'), 
    ('user-agent-c', '12; MACBOOKDANDAN'), 
    ('app-type', 'I')
]

# –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –º–µ—Ç–∞–¥–∞—Ç–∞
simple_metadata = [
    ('sessionkey', '5MtEKcQbp3LZZXK5s3lNIH'),
    ('sessionid', '5P2qfQVZcRGMldmHzyfAaI'),
    ('device-type', 'ios'),
    ('refid', str(uuid.uuid4())),
    ('user-agent-c', '12; MACBOOKDANDAN')
]

print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ó–ù–´–• –§–û–†–ú–ê–¢–û–í V2 API ===\n")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã data
test_cases = [
    ('–ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ', '{}'),
    ('accountStatus –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞', '{"accountStatus": "O"}'),
    ('–ü—Ä–æ—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç', '{"status": "O"}'),
    ('–¢–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–µ O', '"O"'),
    ('accountStatus –∫–∞–∫ —á–∏—Å–ª–æ', '{"accountStatus": 0}'),
    ('–î—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç', '{"account_status": "O"}'),
    ('–ë–µ–∑ JSON', 'accountStatus=O'),
]

for description, data_str in test_cases:
    print(f"üîÑ {description}: {data_str}")
    
    for meta_name, metadata in [("–ø—Ä–æ—Å—Ç–∞—è", simple_metadata), ("–ø–æ–ª–Ω–∞—è", full_metadata)]:
        try:
            request = WebAccountsRequest(code='GET_ACCOUNTS', data=data_str)
            response = v2_stub.makeWebAccountV2(request, metadata=metadata)
            status = "‚úÖ" if response.success else "‚ùå"
            error_info = f" - {response.error.code}" if not response.success else f" - {len(response.data)} —Å–∏–º–≤–æ–ª–æ–≤"
            print(f"   {meta_name} –º–µ—Ç–∞–¥–∞—Ç–∞: {status}{error_info}")
        except Exception as e:
            print(f"   {meta_name} –º–µ—Ç–∞–¥–∞—Ç–∞: ‚ùå EXCEPTION - {e}")
    print()

channel.close() 