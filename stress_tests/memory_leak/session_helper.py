#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è Mobile Stresser

–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö
—Å–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã Mobile Stresser.
"""

import json
import os
from datetime import datetime

class SessionHelper:
    """–ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    def __init__(self):
        self.session_file = "current_session.json"
    
    def save_session(self, session_data):
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
        
        Args:
            session_data (dict): –°–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        """
        try:
            # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏
            session_data['saved_at'] = datetime.now().isoformat()
            
            with open(self.session_file, 'w', encoding='utf-8') as f:
                json.dump(session_data, f, indent=2, ensure_ascii=False)
            
            print(f"‚úÖ –°–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {self.session_file}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
            return False
    
    def load_session(self):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
        
        Returns:
            dict: –°–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ None –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
        """
        try:
            if not os.path.exists(self.session_file):
                print(f"‚ö†Ô∏è –§–∞–π–ª {self.session_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None
            
            with open(self.session_file, 'r', encoding='utf-8') as f:
                session_data = json.load(f)
            
            print(f"‚úÖ –°–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ {self.session_file}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç —Å–µ—Å—Å–∏–∏
            if 'saved_at' in session_data:
                saved_time = datetime.fromisoformat(session_data['saved_at'])
                age = datetime.now() - saved_time
                print(f"üìÖ –í–æ–∑—Ä–∞—Å—Ç —Å–µ—Å—Å–∏–∏: {age}")
                
                if age.total_seconds() > 3600:  # 1 —á–∞—Å
                    print("‚ö†Ô∏è –°–µ—Å—Å–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–µ–π (—Å—Ç–∞—Ä—à–µ 1 —á–∞—Å–∞)")
            
            return session_data
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
            return None
    
    def create_session_template(self):
        """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è —Å–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        template = {
            "session_key": "–ü–û–ú–ï–°–¢–ò–¢–ï_–°–Æ–î–ê_–í–ê–®–ò_SESSION_KEY",
            "session_id": "–ü–û–ú–ï–°–¢–ò–¢–ï_–°–Æ–î–ê_–í–ê–®–ò_SESSION_ID",
            "refid": "–í–ê–®–ò_REF_ID",
            "imei": "–í–ê–®–ò_IMEI",
            "userid": "–í–ê–®–ò_USER_ID",
            "customerno": "–í–ê–®–ò_CUSTOMER_NO",
            "status": "ALLOWED",
            "userlocale": "ru",
            "userphonenumber": "+996XXXXXXXXX",
            "userotpdelivery": "sms",
            "customerindcorp": "C",
            "username": "–≤–∞—à_–ª–æ–≥–∏–Ω",
            "userbranch": "001",
            "useremail": "–≤–∞—à_email@gmail.com",
            "isuseractive": "true",
            "isuserreadonly": "false",
            "iscustomerreadonly": "false",
            "lastpasswordchangetimestamp": "Mon May 26 2025 10:27:16 GMT+0600 (Kyrgyzstan Time)",
            "isjointaccount": "false",
            "istrusted": "false",
            "ismaker": "true",
            "ischecker": "true"
        }
        
        template_file = "session_template.json"
        with open(template_file, 'w', encoding='utf-8') as f:
            json.dump(template, f, indent=2, ensure_ascii=False)
        
        print(f"‚úÖ –®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω: {template_file}")
        print("üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —à–∞–±–ª–æ–Ω –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ –ø–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –≤ current_session.json")
        
        return template_file

def print_instructions():
    """–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Å–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("=" * 60)
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–û–õ–£–ß–ï–ù–ò–Æ –°–ï–°–°–ò–û–ù–ù–´–• –î–ê–ù–ù–´–•")
    print("=" * 60)
    print()
    print("1. üîê –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –í –°–ò–°–¢–ï–ú–ï:")
    print("   - –í–æ–π–¥–∏—Ç–µ –≤ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
    print("   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å –ª–æ–≥–∏–Ω–æ–º –∏ –ø–∞—Ä–æ–ª–µ–º")
    print("   - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ SMS/OTP –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    print()
    print("2. üîç –ü–û–õ–£–ß–ï–ù–ò–ï –°–ï–°–°–ò–û–ù–ù–´–• –î–ê–ù–ù–´–•:")
    print("   –í–∞—Ä–∏–∞–Ω—Ç A - –ß–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä (Web-–≤–µ—Ä—Å–∏—è):")
    print("   - –û—Ç–∫—Ä–æ–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12)")
    print("   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Network")
    print("   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ª—é–±–æ–π –∑–∞–ø—Ä–æ—Å –≤ —Å–∏—Å—Ç–µ–º–µ")
    print("   - –ù–∞–π–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ:")
    print("     * session_key")
    print("     * session_id")
    print("     * userid")
    print("     * –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print()
    print("   –í–∞—Ä–∏–∞–Ω—Ç B - –ß–µ—Ä–µ–∑ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
    print("   - –í–∫–ª—é—á–∏—Ç–µ –æ—Ç–ª–∞–¥–∫—É –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    print("   - –ù–∞–π–¥–∏—Ç–µ –≤ –ª–æ–≥–∞—Ö —É—Å–ø–µ—à–Ω—ã–µ gRPC –∑–∞–ø—Ä–æ—Å—ã")
    print("   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–æ–≤")
    print()
    print("   –í–∞—Ä–∏–∞–Ω—Ç C - –ß–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π:")
    print("   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π")
    print("   - –ù–∞–π–¥–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é –¥–ª—è –≤–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ session_key –∏ session_id")
    print()
    print("3. üíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•:")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ SessionHelper –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
    print("   - –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª current_session.json –≤—Ä—É—á–Ω—É—é")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")
    print()
    print("4. ‚úÖ –ü–†–û–í–ï–†–ö–ê:")
    print("   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ mobile_stresser.py —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç —É—Å–ø–µ—à–Ω–æ")
    print()
    print("‚ö†Ô∏è –í–ê–ñ–ù–û:")
    print("   - –°–µ—Å—Å–∏–∏ –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏")
    print("   - –û–±–Ω–æ–≤–ª—è–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ")
    print("   - –ù–µ –¥–µ–ª–∏—Ç–µ—Å—å —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print()
    print("=" * 60)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–Ω–∏–∫–∞"""
    print("üîß Session Helper –¥–ª—è Mobile Stresser")
    print()
    
    helper = SessionHelper()
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        print("2. üìù –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω —Å–µ—Å—Å–∏–∏")
        print("3. üíæ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é")
        print("4. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Å—Å–∏—é")
        print("5. üö™ –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
        
        if choice == '1':
            print_instructions()
        elif choice == '2':
            helper.create_session_template()
        elif choice == '3':
            session = helper.load_session()
            if session:
                print("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è:")
                # –°–∫—Ä—ã–≤–∞–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                safe_session = session.copy()
                if 'session_key' in safe_session:
                    safe_session['session_key'] = safe_session['session_key'][:10] + "..."
                if 'session_id' in safe_session:
                    safe_session['session_id'] = safe_session['session_id'][:10] + "..."
                print(json.dumps(safe_session, indent=2, ensure_ascii=False))
        elif choice == '4':
            session = helper.load_session()
            if session:
                # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
                required = ['session_key', 'session_id', 'userid']
                missing = [field for field in required if field not in session or not session[field]]
                
                if missing:
                    print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: {missing}")
                else:
                    print("‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –∫–ª—é—á–µ–π
                    if len(session['session_key']) < 20:
                        print("‚ö†Ô∏è session_key –∫–∞–∂–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–º")
                    if len(session['session_id']) < 20:
                        print("‚ö†Ô∏è session_id –∫–∞–∂–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–º")
        elif choice == '5':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main() 